# This example configuration covers detailed configuration for each sampler

# General configuration
[general]
# Sets the socket address for Rezolus to listen on. This is a required parameter
listen = "0.0.0.0:4242"

# Specify the logging level: error, info, debug, trace,
# logging = "info"

# The default interval, in milliseconds, for all samplers
# interval = 1000

# The default window for percentiles in seconds. Samples older than this will
# age-out of the histograms.
# window = 60

# The number of worker threads which are used to run samplers. This should be
# increased if the process is CPU bound and falling behind when running a large
# number of samplers. Individual samplers cannot be running concurrently on
# multiple workers, so increasing this will not help if a particular sampler is
# falling behind due to its interval being too short, but would allow for other
# samplers to run in parallel.
# threads = 1

# Control whether errors during initialization/sampling should be treated as
# critical errors and cause the program to exit. Typically, this would only be
# changed for development/CI purposes.
# fault_tolerant = true

# Specify a suffix that should be appended to counter/gauge readings. This may
# be set to an empty string to remove the suffix entirely.
# reading_suffix = "count"

# Per-sampler configuration sections
[samplers]


[samplers.libcall]
enabled = true


# The quickest and easiest way to configure a library to be configured is to use the lib_search
# configuration. This will look through some common library paths for the specified library and
# and probes for the specified functions.
[samplers.libcall.lib_search]
# search for libcurl, and probe the functino curl_global_init
curl = ["curl_global_init"]

# If the default search behavior doesn't work for you, you can specify the exact path to the library
# you would like to probe using the lib_files configuration option. If both a lib_search and
# lib_file are specified, the lib_file will be used. Below is an example of sampling two different
# versions of libkrb.
#
# WARNING: You cannot attach multiple probes to the same function.
[samplers.libcall.lib_files.krb3]
# Export krb3/krb5_cc_get_principal and krb3/krb5_parse_name_flags from the specified file
"/usr/lib/x86_64-linux-gnu/libkrb5.so.3" = ["krb5_cc_get_principal", "krb5_parse_name_flags"]

[samplers.libcall.lib_files.krb26]
# Export krb26/krb5_cc_get_principal and krb26/krb5_parse_name_flags from the specified file
"/usr/lib/x86_64-linux-gnu/libkrb5.so.26" = ["krb5_cc_get_principal", "krb5_parse_name_flags"]

# You can also combine both files to the same library name.
[samplers.libcall.lib_files.krb_combined]
"/usr/lib/x86_64-linux-gnu/libkrb5.so.26" = ["krb5_build_principal"]
"/usr/lib/x86_64-linux-gnu/libkrb5.so.3" = ["krb5_build_principal"]
