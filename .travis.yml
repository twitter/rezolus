language: rust
sudo: required
matrix:
  fast_finish: true
  include:
    - name: "default: xenial / nightly"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1
      script:
        - bash build/ci.sh
    - name: "default: bionic / nightly"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 8 / bcc 0.10.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="8" BCC_VERSION="0.10.0" FEATURES="bpf_v0_10_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 8 / bcc 0.11.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="8" BCC_VERSION="0.11.0" FEATURES="bpf_v0_11_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 8 / bcc 0.12.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="8" BCC_VERSION="0.12.0" FEATURES="bpf_v0_12_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 8 / bcc latest"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="8" BCC_VERSION="latest" FEATURES="bpf"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 9 / bcc 0.10.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="9" BCC_VERSION="0.10.0" FEATURES="bpf_v0_10_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 9 / bcc 0.11.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="9" BCC_VERSION="0.11.0" FEATURES="bpf_v0_11_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 9 / bcc 0.12.0"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="9" BCC_VERSION="0.12.0" FEATURES="bpf_v0_12_0"
      script:
        - bash build/ci.sh
    - name: "bpf: xenial / nightly / llvm 9 / bcc latest"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="8" BCC_VERSION="latest" FEATURES="bpf"
      script:
        - bash build/ci.sh
    - name: "bpf: bionic / nightly / llvm 10 / bcc 0.10.0"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="10" BCC_VERSION="0.10.0" FEATURES="bpf_v0_10_0"
      script:
        - bash build/ci.sh
    - name: "bpf: bionic / nightly / llvm 10 / bcc 0.11.0"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="10" BCC_VERSION="0.11.0" FEATURES="bpf_v0_11_0"
      script:
        - bash build/ci.sh
    - name: "bpf: bionic / nightly / llvm 10 / bcc 0.12.0"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="10" BCC_VERSION="0.12.0" FEATURES="bpf_v0_12_0"
      script:
        - bash build/ci.sh
    - name: "bpf: bionic / nightly / llvm 10 / bcc latest"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1 LLVM_VERSION="10" BCC_VERSION="latest" FEATURES="bpf"
      script:
        - bash build/ci.sh
    - name: "push_kafka: xenial / nightly"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1 FEATURES="push_kafka"
      script:
        - bash build/ci.sh
    - name: "no-default: xenial / stable"
      os: linux
      dist: xenial
      rust: stable
      env: RUST_BACKTRACE=1
      script:
        - cargo build --no-default-features
        - cargo test --no-default-features
        - cargo build --release --no-default-features
        - cargo test --release --no-default-features
        - sudo timeout --signal=INT --preserve-status 5.0m target/release/rezolus --config configs/ci.toml
    - name: "no-default: bionic / stable"
      os: linux
      dist: bionic
      rust: stable
      env: RUST_BACKTRACE=1
      script:
        - cargo build --no-default-features
        - cargo test --no-default-features
        - cargo build --release --no-default-features
        - cargo test --release --no-default-features
        - sudo timeout --signal 15 --preserve-status 5.0m target/release/rezolus --config configs/ci.toml
    - name: "no-default: xenial / nightly"
      os: linux
      dist: xenial
      rust: nightly
      env: RUST_BACKTRACE=1
      script:
        - cargo build --no-default-features
        - cargo test --no-default-features
        - cargo build --release --no-default-features
        - cargo test --release --no-default-features
        - sudo timeout --signal=INT --preserve-status 5.0m target/release/rezolus --config configs/ci.toml
    - name: "no-default: bionic / nightly"
      os: linux
      dist: bionic
      rust: nightly
      env: RUST_BACKTRACE=1
      script:
        - cargo build --no-default-features
        - cargo test --no-default-features
        - cargo build --release --no-default-features
        - cargo test --release --no-default-features
        - sudo timeout --signal 15 --preserve-status 5.0m target/release/rezolus --config configs/ci.toml
    - name: "rustfmt"
      os: linux
      dist: bionic
      rust: stable
      env: RUST_BACKTRACE=1
      script:
        - rustup component add rustfmt --toolchain stable
        - cargo +stable fmt -- --check
    - name: "clippy"
      os: linux
      dist: bionic
      rust: stable
      env: RUST_BACKTRACE=1
      script:
        - rustup component add clippy
        - cargo clippy --features bpf
    - name: "shellcheck"
      os: linux
      dist: bionic
      rust: stable
      script:
        - shellcheck build/*.sh